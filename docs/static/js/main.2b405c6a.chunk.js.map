{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA/BK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EACCC,mBAAS,IADV,mBAC5BC,EAD4B,KAChBC,EADgB,KAgBnC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAY,SAAC,GAAoB,EAAnBJ,GAAoB,IAAhBC,EAAe,EAAfA,MAAOV,EAAQ,EAARA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAe,IAAdnB,EAAa,EAAbA,SAAa,ECDV,SAACA,GAAa,IAAD,EACXd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAqBrC,OAfAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAKrB,CAACpB,IAGGqB,EDlBuBK,CAAa1B,GAA/Ba,EAFsB,EAE3BN,KAAYa,EAFe,EAEfA,QASnB,OACI,eAAC,WAAD,WACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAGQA,GAFEA,EAAIC,aEQvBgB,EA3BM,WAAK,IAAD,EACezC,mBAAS,CAAC,cADzB,mBACd0C,EADc,KACF3C,EADE,KAOrB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MChBjC6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2b405c6a.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories})=>{\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) =>{\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories(cats =>[inputValue, ...cats])\n            setInputValue('')\n        }\n        \n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            /> \n        </form>\n    )\n}\n\nAddCategory.propTypes={\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","export const getGifs = async(category) =>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=V8R3Xx7zhdsxFIhBeKgopR2HaM5JlT3Z`\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map(img =>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url \n        }\n    })\n\n    return gifs;\n    \n}    ","import React from 'react';\n\nexport const GifGridItem=({id, title, url}) =>{\n    // console.log({id, title, url});\n    return(\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}","import React, {useState, useEffect, Fragment} from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) =>{\n\n    const {data:images,loading} = useFetchGifs(category);\n    // useEffect(()=>{\n    //     getGifs(category)\n    //     .then(setImages); \n    // }, [category])\n\n    \n\n    // getGifs();\n    return (\n        <Fragment>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map((img) =>\n                        <GifGridItem \n                            key={ img.id}\n                            // img={ img  }\n                            {...img}\n                        />\n                    )\n                }\n            </div>\n        </Fragment>\n    )\n}","import {useState, useEffect} from 'react';\nimport { getGifs } from '../helpers/getGifs';  \n\nexport const useFetchGifs = (category) =>{\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(()=>{\n\n        getGifs(category)\n        .then(imgs=>{\n\n                setState({\n                    data: imgs,\n                    loading:false\n                });\n    \n        })\n     \n    }, [category])\n    \n\n    return state; \n}","import React, {useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = ()=>{\n    const [categories, setCategories] = useState(['One Punch']);\n    // const handleAdd = () =>{\n    //     // setcategories(newCategory);\n    //     setcategories(cats =>[...cats, 'Arale'])\n    // }\n\n    return(\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n            {/* <button onClick={handleAdd}>Agregar</button> */}\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid \n                            key={category}\n                            category={category}>    \n                        </GifGrid>\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GitExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}